<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>克喵🐱の部落格</title>
  
  <subtitle>Ke Miao Blog</subtitle>
  <link href="https://blog.kemeow.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.kemeow.cn/"/>
  <updated>2025-03-08T04:25:16.276Z</updated>
  <id>https://blog.kemeow.cn/</id>
  
  <author>
    <name>克喵爱吃卤面</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.kemeow.cn/posts/4a17b156.html"/>
    <id>https://blog.kemeow.cn/posts/4a17b156.html</id>
    <published>2025-03-07T12:57:00.830Z</published>
    <updated>2025-03-08T04:25:16.276Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Notion-Hexo 的 Elog 配置详解</title>
    <link href="https://blog.kemeow.cn/notion-notice/"/>
    <id>https://blog.kemeow.cn/notion-notice/</id>
    <published>2025-03-07T11:44:00.000Z</published>
    <updated>2025-03-07T12:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用 Elog 同步Notion 上的文档时，因为是将富文本向下转成 markdown，会有很多样式损失。这是由于 markdown 样式集合＜ Notion 样式集合。所以在 Notion 上书写时，得按照 markdown 支持的样式进行写作。</p><blockquote><p>可以在<a href="/notion-example/">这里</a> 看到 Notion 文档被导出为 markdown 时的样式损失程度</p></blockquote><p>如果你不能接受样式损失，可能 markdown 并不适合你，隔壁 <a href="https://github.com/tangly1024/NotionNext">NotionNext</a> 可能更适合你搭建博客。</p><h1 id="Notion-格式注意点"><a href="#Notion-格式注意点" class="headerlink" title="Notion 格式注意点"></a>Notion 格式注意点</h1><h3 id="不要使用-markdown-不支持的样式-语法"><a href="#不要使用-markdown-不支持的样式-语法" class="headerlink" title="不要使用 markdown 不支持的样式&#x2F;语法"></a>不要使用 markdown 不支持的样式&#x2F;语法</h3><p>例如字体颜色、多级折叠块、书签、数据库、嵌入等。导出为 markdown 都不能正常展示。</p><h3 id="适当使用-markdown-形式的超链接"><a href="#适当使用-markdown-形式的超链接" class="headerlink" title="适当使用 markdown 形式的超链接"></a>适当使用 markdown 形式的超链接</h3><p>在文档中使用markdown 形式的超链接可以解决部分路由问题，例如链接Notion文档的超链接会被自动处理为非完整路径，或者手动链接到某个相对路由，可以使用以下方式解决</p><figure class="highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 使用[]() markdown 超链接语法</span><br><span class="line">点击 [下一篇](/notion/deploy-platform) 继续配置部署平台</span><br></pre></td></tr></table></figure><h3 id="请勿上传视频、文件到-Notion-文档"><a href="#请勿上传视频、文件到-Notion-文档" class="headerlink" title="请勿上传视频、文件到 Notion 文档"></a>请勿上传视频、文件到 Notion 文档</h3><p>Elog 还暂不支持将Notion 中的视频、文件暂不支持上传到图床。如果下载到本地，短期内能访问，但因为 notion 的链接具有时效性，一般是一个小时，之后就不能查看了。</p><h1 id="Elog-配置详解"><a href="#Elog-配置详解" class="headerlink" title="Elog 配置详解"></a>Elog 配置详解</h1><p>参考<a href="https://elog.1874.cool/">Elog 文档</a>，本博客的 Elog 的配置如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">write</span>: &#123;</span><br><span class="line">    <span class="attr">platform</span>: <span class="string">&#x27;notion&#x27;</span>,</span><br><span class="line">    <span class="attr">notion</span>: &#123;</span><br><span class="line">      <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">NOTION_TOKEN</span>,</span><br><span class="line">      <span class="attr">databaseId</span>: process.<span class="property">env</span>.<span class="property">NOTION_DATABASE_ID</span>,</span><br><span class="line">      <span class="attr">filter</span>: &#123; <span class="attr">property</span>: <span class="string">&#x27;status&#x27;</span>, <span class="attr">select</span>: &#123; <span class="attr">equals</span>: <span class="string">&#x27;已发布&#x27;</span> &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">deploy</span>: &#123;</span><br><span class="line">    <span class="attr">platform</span>: <span class="string">&#x27;local&#x27;</span>,</span><br><span class="line">    <span class="attr">local</span>: &#123;</span><br><span class="line">      <span class="attr">outputDir</span>: <span class="string">&#x27;./source/_posts&#x27;</span>,</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;title&#x27;</span>,</span><br><span class="line">      <span class="attr">format</span>: <span class="string">&#x27;markdown&#x27;</span>,</span><br><span class="line">      <span class="attr">frontMatter</span>: &#123;</span><br><span class="line">        <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">include</span>: [<span class="string">&#x27;categories&#x27;</span>, <span class="string">&#x27;tags&#x27;</span>, <span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;updated&#x27;</span>, <span class="string">&#x27;permalink&#x27;</span>, <span class="string">&#x27;cover&#x27;</span>, <span class="string">&#x27;description&#x27;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">formatExt</span>: <span class="string">&#x27;./format-image.js&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">image</span>: &#123;</span><br><span class="line">    <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">platform</span>: <span class="string">&#x27;local&#x27;</span>,</span><br><span class="line">    <span class="attr">local</span>: &#123;</span><br><span class="line">      <span class="attr">outputDir</span>: <span class="string">&#x27;./source/images&#x27;</span>,</span><br><span class="line">      <span class="attr">prefixKey</span>: <span class="string">&#x27;/images&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Notion-配置"><a href="#Notion-配置" class="headerlink" title="Notion 配置"></a>Notion 配置</h2><p><img src="/../images/e14f57e7c0b70a59599fc7b2f592519f.png" alt="Untitled.png"></p><p>根据 <a href="https://hexo.io/zh-cn/docs/front-matter">Hexo 的 FrontMatter 配置文档</a>，和 <a href="https://butterfly.js.org/posts/dc584b87/?highlight=front%20matter#Post-Front-matter">Butterfly主题的 FrontMatter 配置文档</a>，可以将需要的参数作为 notion 数据库的字段来设置。一般来说，主题的 FrontMatter 为 Hexo在一些基础字段是共用的。</p><ul><li><code>permalink</code>为文档的永久链接，例如<code>https://notion-hexo.vercel.app/notion-hexo/</code>，注意记得在结尾加上<code>/</code></li><li><code>categories</code>为文档的分类</li><li><code>tags</code> 为文档的标签</li><li><code>description</code>为主题配置中可选的文档描述</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">notion</span>: &#123;</span><br><span class="line">  <span class="attr">token</span>: process.<span class="property">env</span>.<span class="property">NOTION_TOKEN</span>,</span><br><span class="line">  <span class="attr">databaseId</span>: process.<span class="property">env</span>.<span class="property">NOTION_DATABASE_ID</span>,</span><br><span class="line">  <span class="attr">filter</span>: &#123; <span class="attr">property</span>: <span class="string">&#x27;status&#x27;</span>, <span class="attr">select</span>: &#123; <span class="attr">equals</span>: <span class="string">&#x27;已发布&#x27;</span> &#125;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>token</code>为 Notion Token，可从<a href="https://elog.1874.cool/notion/gvnxobqogetukays#token-1">此处</a>获取</li><li><code>databaseId</code>为数据库的 ID，可从<a href="https://elog.1874.cool/notion/gvnxobqogetukays#databaseid">此处</a>获取</li><li><code>filter</code>表示 Elog 将下载 notion 数据库属性为<code>status=已发布</code>的文档</li></ul><h2 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h2><p><img src="/../images/3fc5f3bd248bfc7742088976d9652e18.png" alt="Untitled.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local</span>: &#123;</span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&#x27;./source/_posts&#x27;</span>,</span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&#x27;title&#x27;</span>,</span><br><span class="line">  <span class="attr">format</span>: <span class="string">&#x27;markdown&#x27;</span>,</span><br><span class="line">  <span class="attr">frontMatter</span>: &#123;</span><br><span class="line">    <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">include</span>: [<span class="string">&#x27;categories&#x27;</span>, <span class="string">&#x27;tags&#x27;</span>, <span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;updated&#x27;</span>, <span class="string">&#x27;permalink&#x27;</span>, <span class="string">&#x27;cover&#x27;</span>, <span class="string">&#x27;description&#x27;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">formatExt</span>: <span class="string">&#x27;./format-image.js&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>outputDir</code>表示文档的存放位置为项目根目录下的<code>source/_posts</code>文件夹中</li><li><code>filename</code>表示文档将以数据库的 <code>title</code> 字段命名，也就是文档名</li><li><code>format</code>表示文档将以 markdown 的形式保存</li><li><code>frontMatter.enable</code>表示在 markdown 文档开头添加 Front Matter</li><li><code>frontMatter.include</code>表示只输出数组中存在的字段，数据库的其他字段忽略</li><li><code>formatExt=./format-image.js</code>表示将使用自定义文档插件，插件路径为项目根目录下的<code>format-image.js</code>文件</li></ul><h3 id="format-image-js"><a href="#format-image-js" class="headerlink" title="format-image.js"></a>format-image.js</h3><p>该文档插件的作用就是将 notion 文档最上面的<code>封面图 cover</code>，也下载到本地，并替换为本地图片链接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; matterMarkdownAdapter &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@elog/cli&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义文档插件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">DocDetail</span>&#125; doc doc的类型定义为 DocDetail</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ImageClient</span>&#125; imageClient 图床下载器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">Promise&lt;DocDetail&gt;</span>&#125; 返回处理后的文档对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">format</span> = <span class="keyword">async</span> (<span class="params">doc, imageClient</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> cover = doc.<span class="property">properties</span>.<span class="property">cover</span></span><br><span class="line">  <span class="keyword">if</span> (imageClient)  &#123;</span><br><span class="line">    <span class="comment">// 只有启用图床平台image.enable=true时，imageClient才能用，否则请自行实现图片上传</span></span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">await</span> imageClient.<span class="title function_">uploadImageFromUrl</span>(cover, doc)</span><br><span class="line">    <span class="comment">// cover链接替换为本地图片</span></span><br><span class="line">    doc.<span class="property">properties</span>.<span class="property">cover</span> = url</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 将文档内容格式化为带有 Front Matter 的 markdown</span></span><br><span class="line">  doc.<span class="property">body</span> = <span class="title function_">matterMarkdownAdapter</span>(doc);</span><br><span class="line">  <span class="comment">// 返回整个文档对象</span></span><br><span class="line">  <span class="keyword">return</span> doc;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 必须要暴露此方法</span></span><br><span class="line">  format,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local</span>: &#123;</span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&#x27;./source/images&#x27;</span>,</span><br><span class="line">  <span class="attr">prefixKey</span>: <span class="string">&#x27;/images&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>outputDir</code>表示图片的存放位置为项目根目录下的<code>source/images</code>文件夹中</li><li><code>prefixKey=/images</code>表示图片的统一前缀为<code>/images</code>，因为 Hexo 会将<code>source/images</code>文件夹视为<a href="https://hexo.io/zh-cn/docs/asset-folders">静态资源根目录</a>，统一将图片放在这里，并指定图片前缀，Hexo 才能找到此图片</li></ul><h2 id="更多-Elog-配置详情，请阅读-Elog-文档"><a href="#更多-Elog-配置详情，请阅读-Elog-文档" class="headerlink" title="更多 Elog 配置详情，请阅读 Elog 文档"></a>更多 Elog 配置详情，请阅读 <a href="https://elog.1874.cool/">Elog 文档</a></h2>]]></content>
    
    
    <summary type="html">使用Notion + Hexo部署博客时，在 Notion 上写作的注意事项，以及如何配置Elog使其更好的结合Hexo</summary>
    
    
    
    <category term="Elog-Notion" scheme="https://blog.kemeow.cn/categories/Elog-Notion/"/>
    
    
    <category term="notion" scheme="https://blog.kemeow.cn/tags/notion/"/>
    
    <category term="elog" scheme="https://blog.kemeow.cn/tags/elog/"/>
    
  </entry>
  
  <entry>
    <title>Notion + Hexo + GitHub Actions + Vercel 博客解决方案</title>
    <link href="https://blog.kemeow.cn/notion-hexo/"/>
    <id>https://blog.kemeow.cn/notion-hexo/</id>
    <published>2025-03-07T11:44:00.000Z</published>
    <updated>2025-03-07T12:07:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客工具"><a href="#博客工具" class="headerlink" title="博客工具"></a>博客工具</h1><ul><li>写作平台：Notion</li><li>博客平台：<a href="https://hexo.io/">Hexo</a></li><li>博客主题：<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly@4.10.0</a></li><li>博客文档同步：<a href="https://github.com/LetTTGACO/elog">Elog</a></li><li>部署平台：Vercel</li><li>博客仓库：<a href="https://github.com/LetTTGACO/notion-hexo">https://github.com/LetTTGACO/notion-hexo</a></li></ul><h1 id="博客搭建指南"><a href="#博客搭建指南" class="headerlink" title="博客搭建指南"></a>博客搭建指南</h1><h2 id="Fork模板仓库"><a href="#Fork模板仓库" class="headerlink" title="Fork模板仓库"></a>Fork模板仓库</h2><p><a href="https://github.com/elog-x/notion-hexo/fork">点击 Fork</a> 该模板仓库到个人 Github 账号仓库下并 clone 到本地</p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>在项目根目录下运行命令安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="新建-Elog-本地调试文件"><a href="#新建-Elog-本地调试文件" class="headerlink" title="新建 Elog 本地调试文件"></a>新建 Elog 本地调试文件</h2><p>在项目根目录中复制<code>.elog.example.env</code>文件并改名为<code>.elog.env</code>，此文件将用于本地同步Notion 文档</p><h2 id="配置-Notion-关键信息"><a href="#配置-Notion-关键信息" class="headerlink" title="配置 Notion 关键信息"></a>配置 Notion 关键信息</h2><p>按照<a href="https://elog.1874.cool/notion/gvnxobqogetukays#notion">文档提示</a>配置 Notion 并获取 <code>token</code> 和 <code>databaseId</code>，在本地<code>.elog.env</code>中写入</p><figure class="highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NOTION_TOKEN=获取的token</span><br><span class="line">NOTION_DATABASE_ID=获取的databaseId</span><br></pre></td></tr></table></figure><h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><p>在项目根目录运行同步命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run sync:local</span><br></pre></td></tr></table></figure><h2 id="启动-Hexo"><a href="#启动-Hexo" class="headerlink" title="启动 Hexo"></a>启动 Hexo</h2><p>在项目根目录运行hexo启动命令，会自动打开本地博客</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run server</span><br></pre></td></tr></table></figure><h2 id="配置-Hexo-博客"><a href="#配置-Hexo-博客" class="headerlink" title="配置 Hexo 博客"></a>配置 Hexo 博客</h2><p>根据 <a href="https://hexo.io/">Hexo</a> 文档和 <a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 主题配置文档，配置你的博客直到你满意为主，你也可以换别的主题，这里不做演示</p><h2 id="提交代码到-github"><a href="#提交代码到-github" class="headerlink" title="提交代码到 github"></a>提交代码到 github</h2><p>本地访问没问题直接提交所有文件到 Github 仓库即可</p><h2 id="部署到-Vercel"><a href="#部署到-Vercel" class="headerlink" title="部署到 Vercel"></a>部署到 Vercel</h2><p>注册 Vercel 账号并绑定 Github，在 Vercel 导入 该项目，Vercel 会自动识别出该 Hexo 项目，不需要改动，直接选择 Deploy 部署。部署完成会有一个 Vercel 临时域名，你也可以绑定自己的域名。</p><p><img src="/../images/d1c8db52d363aef33efd453346510746.png" alt="Untitled.png"></p><p><img src="/../images/2499beb454bcc2011d1b38146bc9f89a.png" alt="Untitled.png"></p><h2 id="配置-Github-Actions-权限"><a href="#配置-Github-Actions-权限" class="headerlink" title="配置 Github Actions 权限"></a>配置 Github Actions 权限</h2><p>在 Github 仓库的设置中找到 <code>Actions-General</code>，打开流水线写入权限<code>Workflow permissions</code></p><p><img src="/../images/126cb063de647b81306e1c04fbe82ffd.png" alt="Untitled.png"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>在本地运行时，用的是<code>.elog.env</code>文件中定义的 Notion 账号信息，而在 Github Actions 时，需要提前配置环境变量。</p><p>在 Github 仓库的设置中找到 <code>Secrets  and variables</code>，新增仓库的环境变量<code>NOTION_DATABASE_ID</code>和<code>NOTION_TOKEN</code>和<code>.elog.env</code>保持一致即可</p><p><img src="/../images/07c2f4516214b329850282b4b6f9bfcd.png" alt="Untitled.png"></p><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><p>当在 Notion 中改动文档后，手动&#x2F;自动触发 Github Actions流水线，会重新从 Notion 增量拉取文档，自动提交代码到 Github 仓库。</p><p>Vercel 会实时监测仓库代码，当有新的提交时都会重新部署博客。如此就实现了自动化部署博客。</p><p>整个流程的关键点就在于：如何手动&#x2F;自动触发 Github Actions</p><p>在项目.<code>github/workflows/sync.yaml</code>中已经配置了外部 API 触发 Github Actions 事件，所以只需要调用 API 触发流水线即可。</p><h3 id="手动触发"><a href="#手动触发" class="headerlink" title="手动触发"></a>手动触发</h3><p>为了方便，这里提供一个部署在 Vercel 的免费公用的<a href="https://github.com/elog-x/serverless-api"><strong>ServerlessAPI</strong></a>，只需要配置好 URL 参数并浏览器访问即可触发流水线</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://serverless-api-elog.vercel.app/api/github?user=xxx&amp;repo=xxx&amp;event_type=deploy&amp;token=xxx</span><br></pre></td></tr></table></figure><h3 id="自动触发"><a href="#自动触发" class="headerlink" title="自动触发"></a>自动触发</h3><p>可在 Notion 中结合 Slack 触发，<a href="https://elog.1874.cool/notion/vy55q9xwlqlsfrvk">参考教程</a>，这里就不做进一步演示了</p><h1 id="自定义-Elog-配置"><a href="#自定义-Elog-配置" class="headerlink" title="自定义 Elog 配置"></a>自定义 Elog 配置</h1><p>如果想自定义 Elog 配置，可访问 <a href="https://elog.1874.cool/">Elog 文档</a></p><h1 id="博客示例"><a href="#博客示例" class="headerlink" title="博客示例"></a>博客示例</h1><p>示例仓库：<a href="https://github.com/LetTTGACO/notion-hexo">https://github.com/LetTTGACO/notion-hexo</a></p><p>博客示例地址：<a href="https://notion-hexo.vercel.app/">https://notion-hexo.vercel.app</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;博客工具&quot;&gt;&lt;a href=&quot;#博客工具&quot; class=&quot;headerlink&quot; title=&quot;博客工具&quot;&gt;&lt;/a&gt;博客工具&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;写作平台：Notion&lt;/li&gt;
&lt;li&gt;博客平台：&lt;a href=&quot;https://hexo.io/&quot;&gt;Hex</summary>
      
    
    
    
    <category term="博客折腾手册" scheme="https://blog.kemeow.cn/categories/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="notion" scheme="https://blog.kemeow.cn/tags/notion/"/>
    
    <category term="elog" scheme="https://blog.kemeow.cn/tags/elog/"/>
    
    <category term="hexo" scheme="https://blog.kemeow.cn/tags/hexo/"/>
    
    <category term="blog" scheme="https://blog.kemeow.cn/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Markdown-标题语法 | 技术分享</title>
    <link href="https://blog.kemeow.cn/posts/f2a92e92.html"/>
    <id>https://blog.kemeow.cn/posts/f2a92e92.html</id>
    <published>2025-02-12T10:15:25.000Z</published>
    <updated>2025-02-12T10:27:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文位置: <a href="https://markdown.com.cn/basic-syntax/headings.html">https://markdown.com.cn/basic-syntax/headings.html</a></p><h1 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h1><p>要创建标题，请在单词或短语前面添加井号 (#) 。<code>#</code> 的数量代表了标题的级别。例如，添加三个 <code>#</code> 表示创建一个三级标题 <code>&lt;h3&gt;</code> (例如：<code>### My Header</code>)。</p><table><thead><tr><th>Markdown语法</th><th>HTML</th><th>预览效果</th></tr></thead><tbody><tr><td><code># Heading level 1</code></td><td>&lt;h1&gt;Heading level 1&lt;&#x2F;h1&gt;</td><td><h1> Heading level 1</h1></td></tr><tr><td><code>## Heading level 2</code></td><td>&lt;h2&gt;Heading level 1&lt;&#x2F;h2&gt;</td><td><h2>Heading level 2</h2></td></tr><tr><td><code>### Heading level 3</code></td><td>&lt;h3&gt;Heading level 1&lt;&#x2F;h3&gt;&#96;</td><td><h3>Heading level 3</h3></td></tr><tr><td><code>#### Heading level 4</code></td><td>&lt;h4&gt;Heading level 1&lt;&#x2F;h4&gt;</td><td><h4>Heading level 4</h4></td></tr><tr><td><code>##### Heading level 5</code></td><td>&lt;h5&gt;Heading level 1&lt;&#x2F;h5&gt;</td><td><h5>Heading level 5</h5></td></tr><tr><td><code>###### Heading level 6</code></td><td>&lt;h6&gt;Heading level 1&lt;&#x2F;h6&gt;</td><td><h6>Heading level 6</h6></td></tr></tbody></table><h2 id="可选语法"><a href="#可选语法" class="headerlink" title="可选语法"></a>可选语法</h2><p>还可以在文本下方添加任意数量的 &#x3D;&#x3D; 号来标识一级标题，或者 – 号来标识二级标题。</p><table><thead><tr><th>Markdown语法</th><th>HTML</th><th>预览效果</th></tr></thead><tbody><tr><td><code>Heading level 1</code></br> <code>===============</code></td><td>&lt;h1&gt;Heading level 1&lt;&#x2F;h1&gt;</td><td><h1>Heading level 1</h1></td></tr><tr><td><code>Heading level 2</code></br><code>---------------</code></td><td>&lt;h2&gt;Heading level 2&lt;&#x2F;h2&gt;</td><td><h2>Heading level 2</h2></td></tr></tbody></table><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>不同的 <strong>Markdown</strong> 应用程序处理 # 和标题之间的空格方式并不一致。为了兼容考虑，请用一个空格在 <code>#</code> 和标题之间进行分隔。</p><table><thead><tr><th align="left">✅  Do this</th><th align="left">❌  Don’t do this</th></tr></thead><tbody><tr><td align="left"><code># Here&#39;s a Heading</code></td><td align="left"><code>#Here&#39;s a Heading</code></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">记录 Markdown 语法的标题语法,方便学习和查找。</summary>
    
    
    
    <category term="技术分享" scheme="https://blog.kemeow.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="教程" scheme="https://blog.kemeow.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="markdown" scheme="https://blog.kemeow.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown-速查表</title>
    <link href="https://blog.kemeow.cn/posts/b763f92c.html"/>
    <id>https://blog.kemeow.cn/posts/b763f92c.html</id>
    <published>2025-02-11T10:00:00.000Z</published>
    <updated>2025-02-11T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文位置: <a href="https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88">https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88</a></p><h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><p>Markdown 速查表提供了所有 <strong>Markdown</strong><br>语法元素的基本解释。如果你想了解某些语法元素的更多信息，请参阅更详细的<br><strong>基本语法</strong> 和 <strong>扩展语法</strong>.</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>这些是 <strong>John Gruber</strong> 的原始设计文档中列出的元素。所有 <strong>Markdown</strong><br>应用程序都支持这些元素。</p><table><thead><tr><th>元素</th><th>Markdown 语法</th></tr></thead><tbody><tr><td>标题（Heading）</td><td># H1 一级标题</br>  ## H2 二级标题</br>  ### H3 三级标题</td></tr><tr><td>粗体（Bold）</td><td>**bold text**</td></tr><tr><td>斜体（Italic）</td><td>*italicized text*</td></tr><tr><td>引用块（Blockquote）</td><td>&gt; blockquote</td></tr><tr><td>有序列表（Ordered List）</td><td>1. First item</br> 2. Second item</br> 3. Third item</td></tr><tr><td>无序列表（Unordered List）</td><td>- First item</br> - Second item</br> - Third item</td></tr><tr><td>代码（Code）</td><td>`code&#96;</td></tr><tr><td>分隔线（Horizontal Rule）</td><td>—</td></tr><tr><td>链接（Link）</td><td>[title](<a href="https://www.example.com/">https://www.example.com</a>)</td></tr><tr><td>图片（Image）</td><td>![alt text](image.jpg)</td></tr></tbody></table><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><p>这些元素通过添加额外的功能扩展了基本语法。但是，并非所有 <strong>Markdown</strong><br>应用程序都支持这些元素。</p><table><thead><tr><th align="center">元素</th><th align="left">Markdown 语法</th></tr></thead><tbody><tr><td align="center">表格（Table）</td><td align="left">| Syntax | Description |</br>| ———–  |  ———–  |</br>| Header  |  Title  |</br>| Paragraph | Text \</td></tr><tr><td align="center">代码块（Fenced Code Block）</td><td align="left"><code>```</code> </br><code>&#123;</code></br><code>&quot;firstName&quot;: &quot;John&quot;,</code> </br><code>&quot;lastName&quot;: &quot;Smith&quot;,</code></br><code>&quot;age&quot;: 25</code></br><code>&#125;</code></br><code>```</code></td></tr><tr><td align="center">脚注（Footnote）</td><td align="left">Here’s a sentence with a footnote. <code>[^1]</code></br><code>[^1]</code>: This is the footnote.</td></tr><tr><td align="center">标题编号（Heading ID）</td><td align="left">### My Great Heading <code>&#123;#custom-id&#125;</code></td></tr><tr><td align="center">定义列表（Definition List）</td><td align="left">term</br>: definition</td></tr><tr><td align="center">任务列表（Task List）</td><td align="left"><code>- [x] Write the press release</code></br><code>- [ ] Update the website</code></br><code>- [ ] Contact the media</code></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">记录 Markdown 的用法，便于查找。</summary>
    
    
    
    <category term="技术分享" scheme="https://blog.kemeow.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="教程" scheme="https://blog.kemeow.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="markdown" scheme="https://blog.kemeow.cn/tags/markdown/"/>
    
  </entry>
  
</feed>
